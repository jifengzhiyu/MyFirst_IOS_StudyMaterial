// 1. 旋转缩放平移 矩阵操作(旋转 缩放 平移)
// 对一个图形进行缩放旋转平移

// 2.图形上下文栈
// 先按照矩阵操作的规则或样式来画图形 再按照默认的样式重新画图形

// 3.quartz2d内存管理
// 用c的api的可变路径画图 然后analyze(分析代码)

// 4.绘制文字
// 两个方法 换行问题

// 5.绘制图片
// 三个方法 大图和小图 view背景

// 6.模拟imageview
// 系统imageview两种初始化的区别 (init initwithimage)
// 使用系统imageview设置一张图片 添加到控制器view上 点击切换
// 自己写view来模拟上述效果

// 7.裁剪图片的显示区域
// 使图片展现出圆形的效果
// -1.获取上下文
// -2.绘制需要裁剪的形状
// -3.裁剪
// -4.绘制图形到上下文中

// 8.bitmap context
// 开启图片的图形上下文
// 绘制简单图形
// 关闭图片的图形上下文
// 保存到沙盒中
// -1.把image转化成NSData对象
// -2调用data的writetofile方法

// 9.获取裁剪过后的图片
// 获取圆形的图片
// -1.获取image对象
// -2.开启图片的图形上下文
// -3.获取图片的图形上下文
// -4.在上下文中绘制裁剪的形状
// -5.裁剪
// -6.在裁剪过后的上下文中画图
// -7.通过图片的图形上下文获取图片
// -8.关闭图形上下文
// -9.对imageview赋值
// 保存到相册中

// 10.带圆环的图片
// -1.获取图片
// -2.margin
// -3.上下文大小
// -4.开启图片上下文
// -5.获取图形上下文
// -6.圆心center
// -7.半径
// -8.画边框
// -9.设置宽度
// -10.渲染边框
// -11.画需要裁剪的区域
// -12.裁剪
// -13.画头像
// -14.获取当前image
// -15.关闭图片上下文
// -16.赋值

// 10.1
// 先画圆环
// 再画图片 画之前 裁剪

// 11.水印
// 对某张图片添加文字水印和图片水印
// -1.绘制大图
// -2.绘制文字到左上角
// -3.绘制图片到右下角

// 12.屏幕截图
// 截取整个控制器的view
