//1 Head请求  -- 获取响应头
//2 nil  NULL  NSNull
//3 **作为参数  输出参数
//4 下载-->get请求  - 没有进度提示，内存会暴涨
//5 解决没有进度提示
    //Conntion的代理 DownloadDelegate  DataDelegate
        //DownloadDelegate -- 报刊杂志类型的应用
//6 解决内存暴涨--一点一点保存文件     读写文件
    //FileHandle 文件的句柄
    //OutputStream
//7 FileManager -- 创建、复制、删除、判断文件是否存在
//8 断点续传
    //断点续传 思路
    //1 判断是否存在文件，如果文件不存在 从0开始下载
    //2 如果文件存在
    //判断本地的文件大小 == 服务器文件大小  不需要下载
    //判断本地的文件大小 <  服务器文件大小  从当前位置开始下载
    //判断本地的文件大小 >  服务器文件大小  删除文件，从0开始下载


//9 断点续传--服务器文件的信息 （大小和名称-路径）
//10 断点续传--获取本地文件的信息，和服务器文件比较
    //获取本地文件的大小，并且和服务器文件比较
    //1 判断文件是否存在，如果文件不存在 返回0  从开始位置下载
    //2 本地文件的大小
    //3 本地文件的大小  服务器文件大小比较
    //本地文件的大小 == 服务器文件大小比较  返回-1  已经下载完毕
    //本地文件的大小 <  服务器文件大小比较  返回fileSize
    //本地文件的大小 >  服务器文件大小比较  删除文件，返回0  从开始位置下载

//11 断点续传--从指定位置开始下载
//12 下载进度提示  -- 控件
//13 取消（暂停下载）
//14 下载操作管理类  -- 下载操作缓存池--解决了重复下载的问题
//15 暂停操作
//16 把downloader改成自定义Operation

